#!/bin/bash
# Job to analyze outstanding PRs for test issues and add a comment when
# something is found.
set -o pipefail
. "$(dirname "$0")"/setup-vars

# Minimum disk space needed (in KiB)
readonly MINSPACE=100000

# Log lines (may) begin with <level>
readonly LOGCMD='systemd-cat --level-prefix=true --priority=warning'
# Log lines do not begin with <level>
readonly LOGCMDNOLVL='systemd-cat --level-prefix=false --priority=warning'
# First argument is an identifier; this is used in a pipe where the command can't be identified
readonly LOGCMDID='systemd-cat --level-prefix=true --priority=warning --identifier'
# Log a high-priority failure message
readonly LOGFAILURE='eval systemd-cat --level-prefix=false --priority=err echo Job failed with status $?'

# $LOGCMD prefix for the error level
readonly ERRLVL='<3>'

# Enable syslog prefixes on logs, and optionally the verbosity level
#readonly VERBOSITY=--debug --level-prefix
readonly VERBOSITY="--verbose --level-prefix"

$LOGCMDNOLVL echo Starting PR analysis
$LOGCMDNOLVL echo "version $(cat "$HOME/ROOT/version.txt")"

# Check for adequate disk space before starting
if [[ "$(df --output=avail -k "$XDG_CACHE_HOME" | tail -1)" -lt "$MINSPACE" ]]; then
    $LOGCMDNOLVL echo "Not enough disk space available"
    $LOGCMDNOLVL df
    $LOGCMD echo "${ERRLVL}Aborted PR analysis"
    exit 1
fi

###########
# Get list of PRs to check on this run
# i.e. recent ones whose CI jobs have completed and which have indicated a
# failure status

PRTMP="$(mktemp)"
tcanalyzepr $VERBOSITY --authfile "$XDG_DATA_HOME/auth/ghatoken" --ci-status --ready-prs --only-failed-prs 2>&1 > "$PRTMP" | $LOGCMDID tcanalyzepr || $LOGFAILURE
PRS="$(cat "$PRTMP")"
rm -f "$PRTMP"
if [[ -z "$PRS" ]]; then
    $LOGCMDNOLVL echo 'No PRs are ready to check'

else
    $LOGCMDNOLVL echo Checking these PRs: "$PRS"

    ###########
    # Read test logs for all configured CI services

    $LOGCMD tcanalyzepr $VERBOSITY --gather-analysis --origin=circle --pr $PRS || $LOGFAILURE
    $LOGCMD tcanalyzepr $VERBOSITY --gather-analysis --origin=gha --authfile "$XDG_DATA_HOME/auth/ghatoken" --pr $PRS || $LOGFAILURE

    ###########
    # Comment on any PRs that deserve a comment

    $LOGCMD tcanalyzepr $VERBOSITY --comment --authfile "$XDG_DATA_HOME/auth/ghatoken" --pr $PRS || $LOGFAILURE
fi

$LOGCMDNOLVL echo Completed PR analysis
